@using hassio_onedrive_backup.Contracts;
@using hassio_onedrive_backup.Graph;
@using hassio_onedrive_backup.Storage;
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IGraphHelper GraphHelper
@inject IJSRuntime JS
@inject AddonOptions AddonOptions

<div class="container-fluid p-0 @(AddonOptions.DarkMode ? "body-dark-mode": "body-light-mode")">
    @if (GraphHelper.IsAuthenticated == false)
    {
        <div class="alert alert-danger" role="alert" style="padding:1px;margin-bottom:1px;">
            <strong>Not logged in!</strong> To sign in to OneDrive, navigate to <a href="@GraphHelper.AuthUrl" class="alert-link" target="_blank">@GraphHelper.AuthUrl</a> and enter the code <i>
                @GraphHelper.AuthCode
            </i>
            <button type="button" class="btn btn-sm m-1 btn-light" @onclick="CopyCodeToClipboard"><span class="bi bi-clipboard-check" title="Copy code to clipboard"></span></button> to authenticate.
        </div>
    }

    <nav class="p-1 navbar navbar-expand-lg  @(AddonOptions.DarkMode ? "dark": "")">
        <span class="navbar-brand @(AddonOptions.DarkMode ? "dark": "")" href="#">OneDrive Backup</span>
        <div class="nav-item">
            <NavLink class="@navUiStyle" href="" Match="NavLinkMatch.All">
                Dashboard
            </NavLink>
        </div>
        <div id="settingsNav" class="nav-item @(AddonOptions.DarkMode ? "dark": "")">
            <NavLink class="@navUiStyle" href="settings" Match="NavLinkMatch.All">
                Settings
            </NavLink>
        </div>
        <div class="nav-item @(AddonOptions.DarkMode ? "dark": "")">
            <NavLink class="@navUiStyle" href="about" Match="NavLinkMatch.All">
                About
            </NavLink>
        </div>
    </nav>
</div>

<div class="container-fluid p-0" style="padding-bottom: 2rem;margin:0;">
    @Body
</div>

<footer>
    <a href="about"><img class="mx-1" src="images/Bitcoin.svg" alt="Donate Bitcoin" data-bs-toggle="tooltip" data-bs-title="Donate Bitcoin" style="width: 50px; height: auto; transform: scale(0.5);" /></a>
    <a href="https://www.buymeacoffee.com/snirlavis" target="_blank"><img class="mx-1" src="bmc/bmc-button.svg" alt="Buy Me A Coffee" data-bs-toggle="tooltip" data-bs-title="Buy me a coffee" style="height: 1.8rem !important;"></a>
    <p>&copy; Nir Lavi</p>
</footer>

@code{

    private string uiStyle => AddonOptions.DarkMode ? "body-dark-mode" : "body-light-mode";
    private string navUiStyle => AddonOptions.DarkMode ? "nav-link dark" : "nav-link";
    protected override void OnInitialized()
    {
        base.OnInitialized();
        GraphHelper.AuthStatusChangedEventHandler += OnStateChanged;
        AddonOptions.OnOptionsChanged += OnStateChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (LocalStorage.CheckAndMarkFlag(LocalStorage.Flag.ReleaseNotes_2_3_8) == false)
            {
                await Task.Delay(1000);
                await JS.InvokeVoidAsync("showReleaseNotes");
            }
        }
    }

    private void CopyCodeToClipboard()
    {
        JS.InvokeVoidAsync("copyToClipboard", GraphHelper.AuthCode);
    }

    private async void OnStateChanged()
    {
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
}
